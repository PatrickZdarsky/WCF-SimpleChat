//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatService.ChatClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatClient.IChatClient")]
    public interface IChatClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatClient/NewMessage", ReplyAction="http://tempuri.org/IChatClient/NewMessageResponse")]
        void NewMessage(ChatLib.ChatMessage chatMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatClient/NewMessage", ReplyAction="http://tempuri.org/IChatClient/NewMessageResponse")]
        System.Threading.Tasks.Task NewMessageAsync(ChatLib.ChatMessage chatMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatClientChannel : ChatService.ChatClient.IChatClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClientClient : System.ServiceModel.ClientBase<ChatService.ChatClient.IChatClient>, ChatService.ChatClient.IChatClient {
        
        public ChatClientClient() {
        }
        
        public ChatClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void NewMessage(ChatLib.ChatMessage chatMessage) {
            base.Channel.NewMessage(chatMessage);
        }
        
        public System.Threading.Tasks.Task NewMessageAsync(ChatLib.ChatMessage chatMessage) {
            return base.Channel.NewMessageAsync(chatMessage);
        }
    }
}
