//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.PollingChat {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PollingChat.IPollingChat")]
    public interface IPollingChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/SendMessage", ReplyAction="http://tempuri.org/IPollingChat/SendMessageResponse")]
        int SendMessage(ChatLib.ChatMessage chatMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/SendMessage", ReplyAction="http://tempuri.org/IPollingChat/SendMessageResponse")]
        System.Threading.Tasks.Task<int> SendMessageAsync(ChatLib.ChatMessage chatMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/GetLastMessageID", ReplyAction="http://tempuri.org/IPollingChat/GetLastMessageIDResponse")]
        int GetLastMessageID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/GetLastMessageID", ReplyAction="http://tempuri.org/IPollingChat/GetLastMessageIDResponse")]
        System.Threading.Tasks.Task<int> GetLastMessageIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/GetMessage", ReplyAction="http://tempuri.org/IPollingChat/GetMessageResponse")]
        ChatLib.ChatMessage GetMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPollingChat/GetMessage", ReplyAction="http://tempuri.org/IPollingChat/GetMessageResponse")]
        System.Threading.Tasks.Task<ChatLib.ChatMessage> GetMessageAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPollingChatChannel : ChatClient.PollingChat.IPollingChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PollingChatClient : System.ServiceModel.ClientBase<ChatClient.PollingChat.IPollingChat>, ChatClient.PollingChat.IPollingChat {
        
        public PollingChatClient() {
        }
        
        public PollingChatClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PollingChatClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PollingChatClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PollingChatClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendMessage(ChatLib.ChatMessage chatMessage) {
            return base.Channel.SendMessage(chatMessage);
        }
        
        public System.Threading.Tasks.Task<int> SendMessageAsync(ChatLib.ChatMessage chatMessage) {
            return base.Channel.SendMessageAsync(chatMessage);
        }
        
        public int GetLastMessageID() {
            return base.Channel.GetLastMessageID();
        }
        
        public System.Threading.Tasks.Task<int> GetLastMessageIDAsync() {
            return base.Channel.GetLastMessageIDAsync();
        }
        
        public ChatLib.ChatMessage GetMessage(int id) {
            return base.Channel.GetMessage(id);
        }
        
        public System.Threading.Tasks.Task<ChatLib.ChatMessage> GetMessageAsync(int id) {
            return base.Channel.GetMessageAsync(id);
        }
    }
}
